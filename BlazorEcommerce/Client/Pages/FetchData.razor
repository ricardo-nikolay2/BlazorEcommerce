@page "/fetchdata"
@using BlazorEcommerce.Shared
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)

@*@if (products == null)*@


{
    <p><em>Loading...</em></p>
}
else

{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>

    @*<table class="table">
        <thead>
        <tr>
        <th>Id</th>
        <th>Title </th>
        <th>Description</th>
        <th>ImageUrl</th>
        <th>Price</th>

        </tr>
        </thead>

        <tbody>
        @foreach (var products in products)
        {
        <tr>
        <td>@products.Id</td>
        <td>@products.Title</td>
        <td>@products.Description</td>
        <td>@products.Price</td>


        </tr>
        }
        </tbody>
        </table>

        }
    *@

    @code {

    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
    }


    //private Product[]? products;

    //protected override async Task OnInitializedAsync()
    //{
    //    products = await Http.GetFromJsonAsync<Product[]>("Products");
    //}


   }
}
